package demo;

import java.awt.Button;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;



public class Demo extends Frame implements Runnable {


static boolean tag=true;
static  Demo demo=new Demo();
static Button button=new Button("开启到计时");
	@Override
	public void run() {
		int cont=3;
		
			try {
				
				while(!tag)
				{
					button.setLabel(cont+"s");
					cont--;
					Thread.sleep(1000);
					
					if(cont==-1)
					{
						tag=true;
						button.setLabel("结束,重新开始");
					}
				}
				
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	
		
			
			
		}
		
		

	
	public static void main(String[] args) {
		
		
		demo.setBackground(Color.yellow);
	demo.setSize(300,300);
	button.setBackground(Color.white);
	demo.setLayout(new FlowLayout(FlowLayout.LEFT,100,100));
	demo.add(button);
	demo.setVisible(true);
	
	
	demo.addWindowListener(new WindowAdapter() {

		@Override
		public void windowClosing(WindowEvent e) {
			// TODO Auto-generated method stub
			super.windowClosing(e);
			
			System.exit(0);
		}
	});

	
	button.addActionListener(new ActionListener() {
	
	@Override
	public void actionPerformed(ActionEvent e) {
		if(tag) {
			tag=false;
		}
		Thread thread=new Thread(demo);
		thread.start();
		return;
	}
});

	}
	
}
